# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  c99-app-name: "c99-github-actions"
  c99-rg-name: "c99-gh-actions-sample"
  
  st1-app-name: "st1-github-actions"
  st1-rg-name: "st1-gh-actions-sample"

jobs:
  build_test_package:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Publish
      run: dotnet publish src/GitHubActions.Sample.Api/GitHubActions.Sample.Api.csproj -c Release -o releaseArtifact
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
       name: artifacts
       path: /home/runner/work/GithubActionsSample/GithubActionsSample/releaseArtifact/
       if-no-files-found: error
  
  C99:
    needs: build_test_package
    runs-on: ubuntu-latest

    environment:
      name: C99
      url: ${{ steps.slot_swap.outputs.url }}

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: artifacts
        path: artifacts

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy web app to staging/inactive slot/slice
      id: deploywebapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.c99-app-name }}
        slot-name: staging
        package: artifacts

    - name: Swap staging slot into production
      id: slot_swap
      run: |
        az webapp deployment slot swap -g ${{ env.c99-rg-name }} -n ${{ env.c99-app-name }} -s staging
        url=$(az webapp show -g ${{ env.c99-rg-name }} -n ${{ env.c99-app-name }} --query "defaultHostName" -o tsv)
        echo "::set-output name=url::http://$url"
    
    - name: az cli logout
      run: az logout


  ST1:
    needs: C99
    runs-on: ubuntu-latest

    environment:
      name: ST1
      url: ${{ steps.slot_swap.outputs.url }}

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: artifacts
        path: artifacts

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy web app to staging/inactive slot/slice
      id: deploywebapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.st1-app-name }}
        slot-name: staging
        package: artifacts

    - name: Swap staging slot into production
      id: slot_swap
      run: |
        az webapp deployment slot swap -g ${{ env.st1-rg-name }} -n ${{ env.st1-app-name }} -s staging
        url=$(az webapp show -g ${{ env.st1-rg-name }} -n ${{ env.st1-app-name }} --query "defaultHostName" -o tsv)
        echo "::set-output name=url::http://$url"
    
    - name: az cli logout
      run: az logout
      

      
